{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Exchanges","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","id","rank","extra","iconUrl","alt","hoverable","price","marketCap","change","Chart","register","CategoryScale","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","element","color","textAlign","configureStore","reducer","ReactDom","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.33e24e98.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport icon from \"../images/cryptocurrency.png\";\r\n\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Cryptoverse</Link>\r\n        </Typography.Title>\r\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n  'x-rapidapi-key': '00cf7e4ec2msh3a152a6e52b5d6dp1e78c1jsn4cf7b93a272a'\r\n};\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest('/exchanges'),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`)\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\r\n    })\r\n  })\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetExchangesQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery\r\n} = cryptoApi;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Spin />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react';\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { Cryptocurrencies, News } from '../components';\r\nimport  Loader  from './Loader';\r\n\r\nconst { Title } = Typography; // <- Deconstructuring the <Typography.Title> to save space.\r\n \r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n\r\n  if(isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n      <Row>\r\n        <Col span=\"12\"><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n        <Col span=\"12\"><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n        <Col span=\"12\"><Statistic title=\"Total Marketcap\" value={millify(globalStats.totalMarketCap)} /></Col>\r\n        <Col span=\"12\"><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} /></Col>\r\n        <Col span=\"12\"><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">Latest CryptoNews</Title>\r\n        <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\n\r\nconst Exchanges = () => {\r\n  return (\r\n    <div>\r\n      Exchanges\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Exchanges;","import React, { useState, useEffect } from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport  Loader  from './Loader';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n    setCryptos(filteredData);\r\n\r\n  }, [cryptosList, searchTerm]);\r\n  if(isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n            <Link to={`/crypto/${currency.id}`}>\r\n              <Card \r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"crypto\" />}\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}%</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cryptocurrencies;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nimport Chart from 'chart.js/auto'\r\nimport {CategoryScale} from 'chart.js'; Chart.register(CategoryScale)\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for(let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory.data.history[i].price)\r\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price in USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd'\r\n      }\r\n    ]\r\n  }\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\nimport  Loader  from './Loader';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if(isFetching) return <Loader />;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US dollars.\r\n          View value statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select \r\n        defaultValue=\"7d\" \r\n        className=\"select-timeperiod\" \r\n        placeholder=\"Select Time Period\" \r\n        onChange={(value) => setTimePeriod(value)}\r\n      >\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statiscits-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>\r\n              An overview showing the stats of {cryptoDetails.name}\r\n            </p>\r\n          </Col>\r\n          {stats.map(({icon, title, value})=> (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statiscits-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              Other Statistics\r\n            </Title>\r\n            <p>\r\n              An overview showing the stats of all cryptocurrencies\r\n            </p>\r\n          </Col>\r\n          {genericStats.map(({icon, title, value})=> (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}?\r\n            {HTMLReactParser(cryptoDetails.description)}\r\n          </Title>\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>   \r\n      </Col>\r\n    </Col>\r\n  )\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  'x-bingapis-sdk': 'true',\r\n  'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n  'x-rapidapi-key': '00cf7e4ec2msh3a152a6e52b5d6dp1e78c1jsn4cf7b93a272a'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: 'cryptoNewsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n    })\r\n  })\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from 'react';\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader'\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg'\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\r\n  const { data } = useGetCryptosQuery(100);\r\n\r\n  if(!cryptoNews?.value) return <Loader />;\r\n\r\n  return (\r\n    <Row gutter={[ 24, 24 ]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select \r\n            showSearch \r\n            className=\"select-news\" \r\n            placeholder=\"Select a Crypto\" \r\n            optionFilterProp=\"children\" \r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n          >\r\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n            {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card className=\"news-card\" hoverable>\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                <img  style={{ maxWidth:'200px', maxHeight:'100px' }} src={news?.image?.thumbnail?.contentUrl || demoImage } alt=\"news\" />\r\n              </div>\r\n              <p>\r\n                {news.description > 100 ? `${news.description.substring(0, 100)} ...`\r\n                : news.description  \r\n              }\r\n              </p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage } alt=\"news\" />\r\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                </div>\r\n                  <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n\r\nimport { Layout, Typography, Space } from 'antd';\r\n\r\nimport { Navbar, Homepage, Exchanges, Cryptocurrencies, CryptoDetails, News } from './components';\r\nimport './App.css';\r\n\r\n// Ant-Design for Styling and Icons, Redux and Redux toolkit, axios for API request, chart.js to create charts\r\n// html-react-parser to parse some html data, millify to transform large numbers into readable strings, moment\r\n// to parse time and dates and react-chartjs-2 to render the charts from chart.js into the application.\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <Navbar />\r\n      </div>\r\n        <div className=\"main\">\r\n            <Layout>\r\n              <div className=\"routes\">\r\n                <Routes>\r\n                  <Route exact path=\"/\" element={<Homepage/>}/>\r\n                  <Route exact path=\"/exchanges\" element={<Exchanges/>}/>\r\n                  <Route exact path=\"/cryptocurrencies\" element={<Cryptocurrencies/>}/>\r\n                  <Route exact path=\"/crypto/:coinId\" element={<CryptoDetails/>}/>\r\n                  <Route exact path=\"/news\" element={<News/>}/>\r\n                </Routes>\r\n              </div>\r\n            </Layout>\r\n        <div className=\"footer\">\r\n          <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\r\n            Cryptoverse <br />\r\n            All rights reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDom.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}